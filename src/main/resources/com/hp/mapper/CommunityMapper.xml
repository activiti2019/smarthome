<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hp.mapper.CommunityMapper">
	<resultMap id="BaseResultMap" type="com.hp.pojo.Community">
		<id column="cm_id" property="cmId" jdbcType="INTEGER" />
		<result column="cm_name" property="cmName" jdbcType="VARCHAR" />
		<result column="longitude" property="longitude" jdbcType="DOUBLE" />
		<result column="latitude" property="latitude" jdbcType="DOUBLE" />
		<result column="state" property="state" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		cm_id, cm_name, longitude, latitude, state
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.hp.pojo.CommunityExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from community
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from community
		where cm_id = #{cmId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		update community set state=-1
		where cm_id = #{cmId,jdbcType=INTEGER}
	</delete>
	<delete id="restoreByPrimaryKey" parameterType="java.lang.Integer">
		update community set state=1
		where cm_id = #{cmId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.hp.pojo.CommunityExample">
		delete from community
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.hp.pojo.Community">
		insert into community (cm_id,
		cm_name, longitude,
		latitude, state)
		values (#{cmId,jdbcType=INTEGER},
		#{cmName,jdbcType=VARCHAR},
		#{longitude,jdbcType=DOUBLE},
		#{latitude,jdbcType=DOUBLE}, #{state,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.hp.pojo.Community">
		insert into community
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="cmId != null">
				cm_id,
			</if>
			<if test="cmName != null">
				cm_name,
			</if>
			<if test="longitude != null">
				longitude,
			</if>
			<if test="latitude != null">
				latitude,
			</if>
			<if test="state != null">
				state,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="cmId != null">
				#{cmId,jdbcType=INTEGER},
			</if>
			<if test="cmName != null">
				#{cmName,jdbcType=VARCHAR},
			</if>
			<if test="longitude != null">
				#{longitude,jdbcType=DOUBLE},
			</if>
			<if test="latitude != null">
				#{latitude,jdbcType=DOUBLE},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.hp.pojo.CommunityExample"
		resultType="java.lang.Integer">
		select count(*) from community
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update community
		<set>
			<if test="record.cmId != null">
				cm_id = #{record.cmId,jdbcType=INTEGER},
			</if>
			<if test="record.cmName != null">
				cm_name = #{record.cmName,jdbcType=VARCHAR},
			</if>
			<if test="record.longitude != null">
				longitude = #{record.longitude,jdbcType=DOUBLE},
			</if>
			<if test="record.latitude != null">
				latitude = #{record.latitude,jdbcType=DOUBLE},
			</if>
			<if test="record.state != null">
				state = #{record.state,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update community
		set cm_id = #{record.cmId,jdbcType=INTEGER},
		cm_name =
		#{record.cmName,jdbcType=VARCHAR},
		longitude =
		#{record.longitude,jdbcType=DOUBLE},
		latitude =
		#{record.latitude,jdbcType=DOUBLE},
		state =
		#{record.state,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.hp.pojo.Community">
		update community
		<set>
			<if test="cmName != null">
				cm_name = #{cmName,jdbcType=VARCHAR},
			</if>
			<if test="longitude != null">
				longitude = #{longitude,jdbcType=DOUBLE},
			</if>
			<if test="latitude != null">
				latitude = #{latitude,jdbcType=DOUBLE},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
		</set>
		where cm_id = #{cmId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.hp.pojo.Community">
		update community
		set cm_name = #{cmName,jdbcType=VARCHAR},
		longitude =
		#{longitude,jdbcType=DOUBLE},
		latitude = #{latitude,jdbcType=DOUBLE},
		state = #{state,jdbcType=INTEGER}
		where cm_id =
		#{cmId,jdbcType=INTEGER}
	</update>
	<!-- 通过QueryCommunity查询符合条件的所有小区 -->
	<select id="selectByQueryCommunity" resultMap="BaseResultMap"
		parameterType="QueryCommunity">
		select * from community where cm_id!=1
		<if test="cmName!=null and ''!=cmName">
			and cm_name like
			"%"#{cmName}"%"
		</if>
		<if test="state!=null">
				and state=#{state,jdbcType=INTEGER}
			</if>
		limit #{startRow},#{size}
	</select>


	<!-- 通过QueryCommunity查询信息条数 -->
	<select id="countByQueryCommunity" resultType="Integer"
		parameterType="QueryCommunity">
		select count(1) from community where cm_id!=1
		<if test="cmName!=null and ''!=cmName">
			and cm_name like
			"%"#{cmName}"%"
		</if>
		<if test="state!=null">
				and state=#{state,jdbcType=INTEGER}
			</if>
	</select>
	<!-- 新增查询所有小区的mapper -->
	<select id="selectAll" resultMap="BaseResultMap">
		select * from community where state=1
	</select>
	<!-- 查询所有小区的 -->
	<select id="selectAllCommunity" resultMap="BaseResultMap">
		select * from community
	</select>
	<!-- 通过管理员ID查询小区 -->
	<select id="selectByAId" resultMap="BaseResultMap">
		select
		community.cm_id,community.cm_name,community.latitude,community.longitude
		from admin,community where admin.cm_id=community.cm_id and a_id=#{aId}
	</select>
</mapper>