<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hp.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="com.hp.pojo.User">
		<id column="u_id" property="uId" jdbcType="INTEGER" />
		<result column="u_name" property="uName" jdbcType="VARCHAR" />
		<result column="u_pwd" property="uPwd" jdbcType="VARCHAR" />
		<result column="realname" property="realname" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="VARCHAR" />
		<result column="birthday" property="birthday" jdbcType="DATE" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="cm_id" property="cmId" jdbcType="INTEGER" />
		<result column="mode" property="mode" jdbcType="INTEGER" />
		<result column="r_id" property="rId" jdbcType="INTEGER" />
		<result column="state" property="state" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		u_id, u_name, u_pwd, realname, sex, birthday, phone, address, email, cm_id,
		mode,
		r_id, state
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.hp.pojo.UserExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user
		where u_id = #{uId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		update user set state=-1
		where u_id = #{uId,jdbcType=INTEGER}
	</delete>
	<delete id="restoreByPrimaryKey" parameterType="java.lang.Integer">
		update user set state=1
		where u_id = #{uId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.hp.pojo.UserExample">
		delete from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.hp.pojo.User">
		insert into user (u_id, u_name, u_pwd,
		realname, sex, birthday,
		phone, address, email,
		cm_id, mode, r_id, state
		)
		values (#{uId,jdbcType=INTEGER}, #{uName,jdbcType=VARCHAR},
		#{uPwd,jdbcType=VARCHAR},
		#{realname,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE},
		#{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{cmId,jdbcType=INTEGER}, #{mode,jdbcType=INTEGER}, #{rId,jdbcType=INTEGER},
		#{state,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.hp.pojo.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="uId != null">
				u_id,
			</if>
			<if test="uName != null">
				u_name,
			</if>
			<if test="uPwd != null">
				u_pwd,
			</if>
			<if test="realname != null">
				realname,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="birthday != null">
				birthday,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="cmId != null">
				cm_id,
			</if>
			<if test="mode != null">
				mode,
			</if>
			<if test="rId != null">
				r_id,
			</if>
			<if test="state != null">
				state,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="uId != null">
				#{uId,jdbcType=INTEGER},
			</if>
			<if test="uName != null">
				#{uName,jdbcType=VARCHAR},
			</if>
			<if test="uPwd != null">
				#{uPwd,jdbcType=VARCHAR},
			</if>
			<if test="realname != null">
				#{realname,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				#{birthday,jdbcType=DATE},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="cmId != null">
				#{cmId,jdbcType=INTEGER},
			</if>
			<if test="mode != null">
				#{mode,jdbcType=INTEGER},
			</if>
			<if test="rId != null">
				#{rId,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.hp.pojo.UserExample"
		resultType="java.lang.Integer">
		select count(*) from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update user
		<set>
			<if test="record.uId != null">
				u_id = #{record.uId,jdbcType=INTEGER},
			</if>
			<if test="record.uName != null">
				u_name = #{record.uName,jdbcType=VARCHAR},
			</if>
			<if test="record.uPwd != null">
				u_pwd = #{record.uPwd,jdbcType=VARCHAR},
			</if>
			<if test="record.realname != null">
				realname = #{record.realname,jdbcType=VARCHAR},
			</if>
			<if test="record.sex != null">
				sex = #{record.sex,jdbcType=VARCHAR},
			</if>
			<if test="record.birthday != null">
				birthday = #{record.birthday,jdbcType=DATE},
			</if>
			<if test="record.phone != null">
				phone = #{record.phone,jdbcType=VARCHAR},
			</if>
			<if test="record.address != null">
				address = #{record.address,jdbcType=VARCHAR},
			</if>
			<if test="record.email != null">
				email = #{record.email,jdbcType=VARCHAR},
			</if>
			<if test="record.cmId != null">
				cm_id = #{record.cmId,jdbcType=INTEGER},
			</if>
			<if test="record.mode != null">
				mode = #{record.mode,jdbcType=INTEGER},
			</if>
			<if test="record.rId != null">
				r_id = #{record.rId,jdbcType=INTEGER},
			</if>
			<if test="record.state != null">
				state = #{record.state,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update user
		set u_id = #{record.uId,jdbcType=INTEGER},
		u_name = #{record.uName,jdbcType=VARCHAR},
		u_pwd = #{record.uPwd,jdbcType=VARCHAR},
		realname = #{record.realname,jdbcType=VARCHAR},
		sex = #{record.sex,jdbcType=VARCHAR},
		birthday = #{record.birthday,jdbcType=DATE},
		phone = #{record.phone,jdbcType=VARCHAR},
		address = #{record.address,jdbcType=VARCHAR},
		email = #{record.email,jdbcType=VARCHAR},
		cm_id = #{record.cmId,jdbcType=INTEGER},
		mode = #{record.mode,jdbcType=INTEGER},
		r_id = #{record.rId,jdbcType=INTEGER},
		state = #{record.state,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.hp.pojo.User">
		update user
		<set>
			<if test="uName != null">
				u_name = #{uName,jdbcType=VARCHAR},
			</if>
			<if test="uPwd != null">
				u_pwd = #{uPwd,jdbcType=VARCHAR},
			</if>
			<if test="realname != null">
				realname = #{realname,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				birthday = #{birthday,jdbcType=DATE},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="cmId != null">
				cm_id = #{cmId,jdbcType=INTEGER},
			</if>
			<if test="mode != null">
				mode = #{mode,jdbcType=INTEGER},
			</if>
			<if test="rId != null">
				r_id = #{rId,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
		</set>
		where u_id = #{uId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.hp.pojo.User">
		update user
		set u_name = #{uName,jdbcType=VARCHAR},
		u_pwd = #{uPwd,jdbcType=VARCHAR},
		realname = #{realname,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=VARCHAR},
		birthday = #{birthday,jdbcType=DATE},
		phone = #{phone,jdbcType=VARCHAR},
		address = #{address,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		cm_id = #{cmId,jdbcType=INTEGER},
		mode = #{mode,jdbcType=INTEGER},
		r_id = #{rId,jdbcType=INTEGER},
		state = #{state,jdbcType=INTEGER}
		where u_id = #{uId,jdbcType=INTEGER}
	</update>

	<!-- 通过QueryUser进行多条件查询 -->
	<select id="selectByQueryUser" resultMap="BaseResultMap"
		parameterType="QueryUser">
		select * from user
		<where>
			<if test="uName!=null and ''!=uName">
				u_name like "%"#{uName}"%"
			</if>
			<if test="realname!=null and ''!=realname">
				and realname like "%"#{realname}"%"
			</if>
			<if test="address!=null and ''!=address">
				and address like "%"#{address}"%"
			</if>
			<if test="cmId!=null">
				and cm_id=#{cmId,jdbcType=INTEGER}
			</if>
			<if test="state!=null">
				and state=#{state,jdbcType=INTEGER}
			</if>
		</where>
		limit #{startRow},#{size}
	</select>

	<!-- 查询每个小区的用户数量 -->
	<select id="selectCountByCommunity" resultType="java.util.Map">
		select cm_id as
		cmId,count(*) as count from user group by cm_id
	</select>

	<!-- 通过QueryUser查询信息条数 -->
	<select id="countByQueryUser" resultType="Integer"
		parameterType="QueryUser">
		select count(1) from user
		<where>
			<if test="uName!=null and ''!=uName">
				u_name like "%"#{uName}"%"
			</if>
			<if test="realname!=null and ''!=realname">
				and realname like "%"#{realname}"%"
			</if>
			<if test="address!=null and ''!=address">
				and address like "%"#{address}"%"
			</if>
			<if test="cmId!=null">
				and cm_id=#{cmId,jdbcType=INTEGER}
			</if>
			<if test="state!=null">
				and state=#{state,jdbcType=INTEGER}
			</if>
		</where>
	</select>
	<!-- 新增的登录查询 -->
	<select id="selectByNameAndPwd" resultMap="BaseResultMap">
		select * from user
		where u_name=#{userName} and u_pwd=#{password}
	</select>
	<!-- 新增验证用户名是否存在 -->
	<select id="selectByUserName" resultMap="BaseResultMap">
		select * from user where
		u_name=#{userName}
	</select>
	<!-- 通过用户名模糊查询用户信息 -->
	<select id="selectListByUserName" resultType="Integer">
		select u_id from
		user where u_name like "%"#{uName}"%"
	</select>
	<!-- 新增根据用户名获取角色 -->
	<select id="getRoles" resultType="java.lang.String">
		select r_name from user,roles
		where user.r_id=roles.id and
		u_name=#{userName}
	</select>
	<!-- 新增根据用户名获取权限 -->
	<select id="getPermissions" resultType="java.lang.String">
		select p_name from
		user,roles,permission where user.r_id=roles.id and
		roles.id=permission.r_id and u_name=#{userName}
	</select>
	<update id="updateUserCommunity" parameterType="Integer">
		update user set cm_id=1 where cm_id=#{cmId}
	</update>
</mapper>